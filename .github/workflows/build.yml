name: Build

on:
  push:
  pull_request:

jobs:
  conan:
    name: Conan - ${{ matrix.platform[0] }} - ${{ matrix.platform[2] }}
    runs-on: ${{ matrix.platform[1] }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - [Linux, ubuntu-latest, gcc]
          - [Linux, ubuntu-latest, clang]
          - [Windows, windows-latest, msvc]
          - [Windows, windows-latest, gcc]
          - [Windows, windows-latest, clang]
    steps:
      - uses: actions/checkout@v3

      - name: Install Clang
        if: matrix.platform[2] == 'clang'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "17.0"

      - name: Set env vars for Clang
        if: matrix.platform[2] == 'clang'
        run: echo "CC=clang" >> $GITHUB_ENV && echo "CXX=clang++" >> $GITHUB_ENV

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Create default Conan profile
        shell: bash
        run: conan profile detect

      - name: Install Conan packages
        run: conan install . -of=lib

  build-all:
    name: CMake - ${{ matrix.platform[0] }} - ${{ matrix.platform[2] }} - ${{ matrix.platform[3] }}
    runs-on: ${{ matrix.platform[1] }}
    strategy:
      matrix:
        platform:
          - [Windows, windows-latest, msvc, debug]
          - [Windows, windows-latest, msvc, release]
          #- [Windows, windows-latest, gcc, debug]
          #- [Windows, windows-latest, gcc, release]
          #- [Windows, windows-latest, clang, debug]
          #- [Windows, windows-latest, clang, release]
          - [Linux, ubuntu-latest, gcc, debug]
          - [Linux, ubuntu-latest, gcc, release]
          #- [Linux, ubuntu-latest, clang, debug]
          #- [Linux, ubuntu-latest, clang, release]
    steps:
      - uses: actions/checkout@v3
  
      #- name: Install GCC
      #  if: matrix.platform[2] == 'gcc'
      #  uses: egor-tensin/setup-mingw@v1
      #
      #- name: Set env vars for GCC
      #  if: matrix.platform[2] == 'gcc'
      #  run: echo "CC=gcc" >> $GITHUB_ENV && echo "CXX=g++" >> $GITHUB_ENV
      
      - name: Install Clang
        if: matrix.platform[2] == 'clang'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "17.0"
      
      - name: Set env vars for Clang
        if: matrix.platform[2] == 'clang'
        run: echo "CC=clang" >> $GITHUB_ENV && echo "CXX=clang++" >> $GITHUB_ENV

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Configure
        run: cmake -G Ninja -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.platform[3] }}

      - name: Build
        run: cmake --build build --parallel --config ${{ matrix.platform[3] }}

      - name: Test
        run: ctest --test-dir build --build-config Release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            build/**/**/**/test/${{ matrix.platform[3] }}/*.exe
            build/lib/**/*.so*
            bin/
            src/version*.*
